$outPut.conformFileName($table.fixToEntityName())
/*******************************************************************************
 * Copyright(c) 2024 the original author Eduardo Iglesias Taylor.
/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/
 
package ${entityPackageName};

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.SequenceGenerator;

#set($pktype = $table.getPKJavaType())
#set($pkColumnName = "")
@Entity
public class $table.fixToEntityName(){

#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "") 
#if($table.isPkPresent())
#set($pkColumn = ${table.getPkColumn()})
#set($pkColumnName = $pkColumn.getName())
#set($pkColumnJavaType = $pkColumn.getColumnJavaType())
#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")
#if($pkColumnJavaType == "java.lang.String")
#set($colLength    = ", length=$pkColumn.getPrecision()")
#elseif(($pkColumnJavaType != "java.sql.Timestamp") and ($pkColumnJavaType != "java.sql.Time")  and ($pkColumn.getJavaSqlType() != "java.util.Date") and ($pkColumn.getJavaSqlType() != "java.sql.Date"))
#set($colPrecision = ", precision=$pkColumn.getPrecision()")
#set($colScale     = ", scale=$pkColumn.getScale()") 
#end
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator="mySeq${table.fixToEntityName()}")
    @SequenceGenerator(name = "my${table.fixToEntityName()}", sequenceName = "${table.getName()}_id_seq", allocationSize = 1)
  private $pkColumnJavaType $pkColumn.fixToAttributeName();
#end

#foreach($eColumn in $table.getColumn())
#if(!$systemColumns.contains($eColumn.getName()))
#if(!$pkColumnName.equals($eColumn.getName()))
#set($pkColumnJavaType = $eColumn.getColumnJavaType())
#set($colLength    = "")
#set($colPrecision = "")
#set($colScale     = "")
#if($pkColumnJavaType == "java.lang.String")
#set($colLength    = ", length=$eColumn.getPrecision()")
#elseif(($pkColumn.getJavaSqlType() != "java.sql.Timestamp") and ($pkColumn.getJavaSqlType() != "java.sql.Time") and ($pkColumn.getJavaSqlType() != "java.util.Date") and ($pkColumn.getJavaSqlType() != "java.sql.Date"))
#set($colPrecision = ", precision=$eColumn.getPrecision()")
#set($colScale     = ", scale=$eColumn.getScale()") 
#end
#if($table.isFkColumn($eColumn))
#set($fkColumnInfo = $table.getFkColumnInfo($eColumn))
@javax.persistence.JoinColumn(table = "$fkColumnInfo.getPkTableName()", name="$fkColumnInfo.getPkColumnName()")
#end
  private $pkColumnJavaType $eColumn.fixToAttributeName();
  
#end
#end
#end

#foreach($fColumn in $table.getColumn())
#if(!$systemColumns.contains($fColumn.getName()))
#set($pkColumnJavaType = $fColumn.getColumnJavaType())
  public $pkColumnJavaType get${fColumn.getAttributeForMethodName()}(){
    return this.$fColumn.fixToAttributeName();
  }	

  public $table.fixToEntityName() set${fColumn.getAttributeForMethodName()} ($pkColumnJavaType $fColumn.fixToAttributeName()){
    this.$fColumn.fixToAttributeName() = $fColumn.fixToAttributeName();
    return this;
  }
#end
#end

}