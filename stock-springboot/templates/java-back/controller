$outPut.conformFileName($table.fixToEntityName())
/*******************************************************************************
 * Copyright(c) 2024 the original author Eduardo Iglesias Taylor.
/*******************************************************************************
Code generated by platkmframework 
*******************************************************************************/

#set($pktype = $table.getPKJavaType())
#set($entityName = ${table.fixToEntityName()})
#set($attributeName = ${table.fixToAttributeName()}) 
#set($pkColumn = ${table.getPkColumn()}) 
#set($llaveAbierta = "{")
#set($llaveCerrada = "}")
package ${controllerPackageName};

import java.util.List;
import java.util.Optional;

import ${entityPackageName}.${entityName};
import ${servicePackageName}.${entityName}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/$entityName.toLowerCase()")
public class ${entityName}Controller {

	@Autowired
	private ${entityName}Service ${attributeName}Service;


    @GetMapping
    public List<${entityName}> findAll() {
        return ${attributeName}Service.findAll();
    }

    @GetMapping("/{id}")
    public Optional<$entityName> findById(@PathVariable Long id) {
        return ${attributeName}Service.findById(id);
    }


    @ResponseStatus(HttpStatus.CREATED) // 201
    @PostMapping
    public $entityName create(@RequestBody $entityName ${attributeName}) {
        return ${attributeName}Service.save(${attributeName});
    }


    @PutMapping
    public $entityName update(@RequestBody $entityName ${attributeName}) {
        return ${attributeName}Service.save(${attributeName});
    }

    @ResponseStatus(HttpStatus.NO_CONTENT) // 204
    @DeleteMapping("/{id}")
    public void deleteById(@PathVariable Long id) {
    	${attributeName}Service.deleteById(id);
    }
}
